<?xml version="1.0" encoding="UTF-8"?>
<Shell xmlns="http://xamarin.com/schemas/2014/forms"
       xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
       xmlns:d="http://xamarin.com/schemas/2014/forms/design"
       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
       xmlns:controls="clr-namespace:QuickFix.Controls"
       xmlns:sys="clr-namespace:System;assembly=netstandard"
       xmlns:vm="clr-namespace:QuickFix.ViewModels"
       mc:Ignorable="d"
       xmlns:views="clr-namespace:QuickFix.Views"
       x:Class="QuickFix.AppShell"
       x:Name="shell"
       FlyoutBackgroundImage="photo.jpg"
       FlyoutBackgroundImageAspect="AspectFill"
       FlyoutHeaderBehavior="CollapseOnScroll">

    <Shell.BindingContext>
        <vm:AppViewModel/>
    </Shell.BindingContext>
    <Shell.Resources>
        <Style x:Key="BaseStyle"
               TargetType="Element">
            <Setter Property="Shell.BackgroundColor"
                    Value="#455A64" />
            <Setter Property="Shell.ForegroundColor"
                    Value="White" />
            <Setter Property="Shell.TitleColor"
                    Value="White" />
            <Setter Property="Shell.DisabledColor"
                    Value="#B4FFFFFF" />
            <Setter Property="Shell.UnselectedColor"
                    Value="#95FFFFFF" />
        </Style>
        <Style TargetType="ShellItem"
               BasedOn="{StaticResource BaseStyle}" />
        <Style x:Key="DomesticShell"
               TargetType="Element"
               BasedOn="{StaticResource BaseStyle}">
            <Setter Property="Shell.BackgroundColor"
                    Value="#039BE6" />
        </Style>
        <Style x:Key="MonkeysShell"
               TargetType="Element"
               BasedOn="{StaticResource BaseStyle}">
            <Setter Property="Shell.BackgroundColor"
                    Value="#689F39" />
        </Style>
        <Style x:Key="ElephantsShell"
               TargetType="Element"
               BasedOn="{StaticResource BaseStyle}">
            <Setter Property="Shell.BackgroundColor"
                    Value="#ED3B3B" />
        </Style>
        <Style x:Key="BearsShell"
               TargetType="Element"
               BasedOn="{StaticResource BaseStyle}">
            <Setter Property="Shell.BackgroundColor"
                    Value="#546DFE" />
        </Style>
        <Style x:Key="AboutShell"
               TargetType="Element"
               BasedOn="{StaticResource BaseStyle}">
            <Setter Property="Shell.BackgroundColor"
                    Value="#96d1ff" />
        </Style>
    </Shell.Resources>

    <Shell.FlyoutHeader>
        <controls:FlyoutHeader />
    </Shell.FlyoutHeader>

    <Shell.FlyoutFooter>
        <controls:FlyoutFooter />
    </Shell.FlyoutFooter>

    <!-- Template for FlyoutHeader -->
    <!-- Not required, as the FlyoutHeader is set above -->
    <!--    <Shell.FlyoutHeaderTemplate>
        <DataTemplate>
            <Grid BackgroundColor="Black"
                  HeightRequest="200">
                <Image Aspect="AspectFill" 
                       Source="xamarinstore.jpg" 
                       Opacity="0.6" />
                <Label Text="Animals" 
                       TextColor="White" 
                       FontAttributes="Bold" 
                       HorizontalTextAlignment="Center"
                       VerticalTextAlignment="Center" />
            </Grid>            
        </DataTemplate>
    </Shell.FlyoutHeaderTemplate>-->

    <!-- Template for FlyoutFooter -->
    <!-- Not required, as the FlyoutFooter is set above -->
    <!--<Shell.FlyoutFooterTemplate>
        <DataTemplate>
            <StackLayout>
                <Label Text="Xaminals"
                       TextColor="GhostWhite"
                       FontAttributes="Bold"
                       HorizontalOptions="Center" />
                <Label Text="{Binding Source={x:Static sys:DateTime.Now}, StringFormat='{0:MMMM dd, yyyy}'}"
                       TextColor="GhostWhite"
                       HorizontalOptions="Center" />
            </StackLayout>
        </DataTemplate>
    </Shell.FlyoutFooterTemplate>-->

    <!-- FlyoutContent -->
    <!-- Not required, just an example -->
    <!--<Shell.FlyoutContent>
        <CollectionView BindingContext="{x:Reference shell}"
                        IsGrouped="True"
                        ItemsSource="{Binding FlyoutItems}">
            <CollectionView.ItemTemplate>
                <DataTemplate>
                    <Label Text="{Binding Title}"
                           TextColor="White"
                           FontSize="Large" />
                </DataTemplate>
            </CollectionView.ItemTemplate>
        </CollectionView>
    </Shell.FlyoutContent>-->

    <!-- Template for FlyoutContent -->
    <!-- Not required, just an example -->
    <!--<Shell.FlyoutContentTemplate>
        <DataTemplate>
            <CollectionView BindingContext="{x:Reference shell}"
                            IsGrouped="True"
                            ItemsSource="{Binding FlyoutItems}">
                <CollectionView.ItemTemplate>
                    <DataTemplate>
                        <Label Text="{Binding Title}"
                               TextColor="White"
                               FontSize="Large" />
                    </DataTemplate>
                </CollectionView.ItemTemplate>
            </CollectionView>
        </DataTemplate>
    </Shell.FlyoutContentTemplate>-->

    <!-- Template each FlyoutItem -->
    <!--    <Shell.ItemTemplate>
        <DataTemplate>
            <Grid ColumnDefinitions="0.2*,0.8*">
                <Image Source="{Binding Icon}"
                       Margin="5"
                       HeightRequest="45" />
                <Label Grid.Column="1"
                       Text="{Binding Title}"
                       FontAttributes="Italic"
                       VerticalTextAlignment="Center" /> 
            </Grid>
        </DataTemplate>
    </Shell.ItemTemplate>-->

    <!-- Template each MenuItem -->
    <!--    <Shell.MenuItemTemplate>
        <DataTemplate>
            <Grid ColumnDefinitions="0.2*,0.8*">
                <Image Source="{Binding Icon}"
                       Margin="5"
                       HeightRequest="45" />
                <Label Grid.Column="1"
                       Text="{Binding Text}"
                       FontAttributes="Italic"
                       VerticalTextAlignment="Center" /> 
            </Grid>
        </DataTemplate>
    </Shell.MenuItemTemplate>-->

   
    <FlyoutItem Route="animals"
                FlyoutDisplayOptions="AsMultipleItems">
        <Tab Title="Technician"
             Route="domestic"
             Icon="maintenance.png">
            <ShellContent IsVisible="{Binding IsUser}" Route="electrician"
                          Style="{StaticResource DomesticShell}"
                          Title="Electrician"
                          Icon="maintenance.png"
                          ContentTemplate="{DataTemplate views:ElectricianList}" />
            <ShellContent IsVisible="{Binding IsUser}" Route="plumber"
                          Style="{StaticResource DomesticShell}"
                          Title="Plumber"
                          Icon="iplumber.png"
                          ContentTemplate="{DataTemplate views:PlumberList}" />
        </Tab>

        <!--

        Shell has implicit conversion operators that enable the Shell visual hierarchy to be simplified.
        This is possible because a subclassed Shell object can only ever contain a FlyoutItem object or a TabBar object,
        which can only ever contain Tab objects, which can only ever contain ShellContent objects.

        The code below demonstrates using these implicit conversion operators to simplify the visual hierarchy. Code that
        relies on the implicit conversion operators will produce intellisense errors in the Visual Studio XAML editor. However,
        this code is valid and does build.
               
        -->

        <Tab Title="Map"
             Route="monkeys"
             Icon="mapmarker50.png">
            <ShellContent IsVisible="{Binding IsUser}" Route="electrician" 
                          Style="{StaticResource ElephantsShell}"
                          Title="Electrician"
                          Icon="maintenance.png"
                          ContentTemplate="{DataTemplate views:Map}" />
            <ShellContent IsVisible="{Binding IsUser}" Route="plumber"
                          Style="{StaticResource ElephantsShell}"
                          Title="Plumber"
                          Icon="iplumber.png"
                          ContentTemplate="{DataTemplate views:PlumberMap}" />
        </Tab>


        <!--<ShellContent Route="monkeys"
                      Style="{StaticResource MonkeysShell}"
                      Title="Map"
                      Icon="mapmarker50.png"
                      ContentTemplate="{DataTemplate views:Map}" />-->
        <ShellContent Route="elephants"
                      Style="{StaticResource ElephantsShell}"
                      Title="Profile"
                      Icon="usermale.png"
                      ContentTemplate="{DataTemplate views:ProfilePage}" />
        <ShellContent Route="bears"
                      Style="{StaticResource BearsShell}"
                      Title="Message"
                      Icon="message.png"
                      ContentTemplate="{DataTemplate views:RegisterPage}" />
    </FlyoutItem>

    <ShellContent Route="about"
                  Style="{StaticResource AboutShell}" 
                  Title="About"
                  Icon="info.png"
                  ContentTemplate="{DataTemplate views:AboutPage}" />

    <MenuItem Text="Help"
              IconImageSource="help.png"
              Command="{Binding HelpCommand}"
              CommandParameter="https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell" />

</Shell>


<!--<?xml version="1.0" encoding="UTF-8"?>
<Shell xmlns="http://xamarin.com/schemas/2014/forms" 
       xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
       xmlns:local="clr-namespace:QuickFix.Views"
       Title="QuickFix"
       x:Class="QuickFix.AppShell">

    -->
<!--
        The overall app visual hierarchy is defined here, along with navigation.
    
        https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/
    -->
<!--

    <Shell.Resources>
        <ResourceDictionary>
            <Style x:Key="BaseStyle" TargetType="Element">
                <Setter Property="Shell.BackgroundColor" Value="{StaticResource Primary}" />
                <Setter Property="Shell.ForegroundColor" Value="White" />
                <Setter Property="Shell.TitleColor" Value="White" />
                <Setter Property="Shell.DisabledColor" Value="#B4FFFFFF" />
                <Setter Property="Shell.UnselectedColor" Value="#95FFFFFF" />
                <Setter Property="Shell.TabBarBackgroundColor" Value="{StaticResource Primary}" />
                <Setter Property="Shell.TabBarForegroundColor" Value="White"/>
                <Setter Property="Shell.TabBarUnselectedColor" Value="#95FFFFFF"/>
                <Setter Property="Shell.TabBarTitleColor" Value="White"/>
            </Style>
            <Style TargetType="TabBar" BasedOn="{StaticResource BaseStyle}" />
            <Style TargetType="FlyoutItem" BasedOn="{StaticResource BaseStyle}" />

            -->
<!--
            Default Styles for all Flyout Items
            https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyoutitem-and-menuitem-style-classes
            -->
<!--
            <Style Class="FlyoutItemLabelStyle" TargetType="Label">
                <Setter Property="TextColor" Value="White"></Setter>
            </Style>
            <Style Class="FlyoutItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="BackgroundColor" Value="LightBlue"></Setter>
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="White" />
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource Primary}" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource Primary}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            -->
<!--
            Custom Style you can apply to any Flyout Item
            -->
<!--
            <Style Class="MenuItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource Primary}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Shell.Resources>

    -->
<!-- 
        When the Flyout is visible this defines the content to display in the flyout.
        FlyoutDisplayOptions="AsMultipleItems" will create a separate flyout item for each child element    
        https://docs.microsoft.com/dotnet/api/xamarin.forms.shellgroupitem.flyoutdisplayoptions?view=xamarin-forms
    -->
<!--
    <FlyoutItem Title="About" Icon="icon_about.png">
        <ShellContent Route="AboutPage" ContentTemplate="{DataTemplate local:AboutPage}" />
    </FlyoutItem>
    <FlyoutItem Title="Browse" Icon="icon_feed.png">
        <ShellContent Route="ItemsPage" ContentTemplate="{DataTemplate local:ItemsPage}" />
    </FlyoutItem>
    <FlyoutItem Title="Register" Icon="icon_feed.png">
        <ShellContent Route="RegisterPage" ContentTemplate="{DataTemplate local:RegisterPage}" />
    </FlyoutItem>
    <FlyoutItem Title="CongratulationPage" Icon="icon_feed.png">
        <ShellContent Route="CongratulationPage" ContentTemplate="{DataTemplate local:CongratulationPage}" />
    </FlyoutItem>
    <FlyoutItem Title="ChangePasswordPage" Icon="icon_feed.png">
        <ShellContent Route="ChangePasswordPage" ContentTemplate="{DataTemplate local:ChangePasswordPage}" />
    </FlyoutItem>
    <FlyoutItem Title="RegisterAsPage" Icon="icon_feed.png">
        <ShellContent Route="RegisterAsPage" ContentTemplate="{DataTemplate local:RegisterAsPage}" />
    </FlyoutItem>
    -->
<!-- When the Flyout is visible this will be a menu item you can tie a click behavior to  -->
<!--
    <MenuItem Text="Logout" StyleClass="MenuItemLayoutStyle" Clicked="OnMenuItemClicked">
    </MenuItem>

    -->
<!--
        TabBar lets you define content that won't show up in a flyout menu. When this content is active
        the flyout menu won't be available. This is useful for creating areas of the application where 
        you don't want users to be able to navigate away from. If you would like to navigate to this 
        content you can do so by calling 
        await Shell.Current.GoToAsync("//LoginPage");
    -->
<!--
    <TabBar>
        <ShellContent Route="LoginPage" ContentTemplate="{DataTemplate local:LoginPage}" />
    </TabBar>

    -->
<!-- Optional Templates 
    // These may be provided inline as below or as separate classes.

    // This header appears at the top of the Flyout.
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyout-header
    <Shell.FlyoutHeaderTemplate>
        <DataTemplate>
            <Grid>ContentHere</Grid>
        </DataTemplate>
    </Shell.FlyoutHeaderTemplate>

    // ItemTemplate is for ShellItems as displayed in a Flyout
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#define-flyoutitem-appearance
    <Shell.ItemTemplate>
        <DataTemplate>
            <ContentView>
                Bindable Properties: Title, Icon
            </ContentView>
        </DataTemplate>
    </Shell.ItemTemplate>

    // MenuItemTemplate is for MenuItems as displayed in a Flyout
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#define-menuitem-appearance
    <Shell.MenuItemTemplate>
        <DataTemplate>
            <ContentView>
                Bindable Properties: Text, Icon
            </ContentView>
        </DataTemplate>
    </Shell.MenuItemTemplate>

    -->
<!--

</Shell>-->

<!--New COde Added-->